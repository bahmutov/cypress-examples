import{_ as i,M as p,p as l,q as u,R as n,t as s,N as a,Q as o,V as c,a1 as r}from"./framework-e03faf0e.js";const k="/cypress-examples/assets/element-props-b55a10f9.png",d="/cypress-examples/assets/checked-prop-51cbd717.png",h="/cypress-examples/assets/prop-name-59c54584.png",m={},v=n("h1",{id:"attributes-vs-properties",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#attributes-vs-properties","aria-hidden":"true"},"#"),s(" Attributes Vs Properties")],-1),g=n("code",null,"cy.get('...').should('have.attr', '...')",-1),b=n("code",null,"cy.get('...').should('have.prop', '...')",-1),f={href:"https://api.jquery.com/attr/",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"cy.get('...').invoke('attr', '...')",-1),y={href:"https://api.jquery.com/prop/",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"cy.get('...').invoke('prop', '...')",-1),q=n("p",null,"What is the difference?",-1),j=n("p",null,[s("An HTML element on the page has "),n("em",null,"attributes"),s(" which are always string values:")],-1),w=r(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checked<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The above element has the following HTML attributes: <code>id</code>, <code>type</code>, and <code>checked</code>. We can confirm each declared attribute using the <code>have.attr</code> assertion.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;example&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token string">&#39;have.attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checkbox&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token string">&#39;have.attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We could get the attribute string value by calling the jQuery <code>attr</code> method. Since it yields the attribute value, we need to query the DOM again if we need to confirm more attributes.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;**invoke attr method**&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;example&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checkbox&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Tip:</strong> assertion <code>have.attr</code> with just the name of the attribute yields the value of the attribute. The above code could be rewritten as</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;**have.attr assertion**&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;example&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checkbox&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.attr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The browser reads the HTML and converts each declared HTML element into an object. This object has links to its parent, any children, and <em>lots</em> of other DOM properties. Let&#39;s see their names (most of them come from the prototype chain)</p><p><img src="`+k+'" alt="DOM element properties"></p><p>The properties have everything needed by the browser at runtime. For example, the HTML attribute <code>checked=&quot;checked&quot;</code> becomes the Boolean property <code>checked</code></p><p><img src="'+d+`" alt="Checked element property"></p><p>To retrieve the runtime element properties I use the jQuery <code>prop</code> method and Chai-Jquery assertion <code>have.prop</code>. For example, we can check if the input checkbox element is currently checked:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.prop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token comment">// equivalent</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#example&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;prop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;be.true&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Tip:</strong> I personally like the <code>have.prop</code> assertion since it shows the property <em>name</em> in the Command Log, while the <code>cy.invoke</code> does not.</p><p><img src="`+h+'" alt="The Command Log difference between the prop assertion and prop call"></p>',15),T=n("h2",{id:"see-also",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),s(" See also")],-1),L={href:"https://stackoverflow.com/questions/5874652/prop-vs-attr",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,".prop() vs .attr()",-1);function I(V,C){const t=p("ExternalLinkIcon"),e=p("RouterLink");return l(),u("div",null,[v,n("p",null,[s("Sometimes I use "),g,s(" and sometimes I use "),b,s(". Similarly, sometimes I invoke the jQuery method "),n("a",f,[s("attr"),a(t)]),s(" via "),_,s(" and sometimes I invoke the "),n("a",y,[s("prop"),a(t)]),s(" method like "),x,s(".")]),q,j,o(" fiddle Attributes vs properties "),w,o(" fiddle-end "),T,n("ul",null,[n("li",null,[n("a",L,[M,a(t)])]),n("li",null,[a(e,{to:"/recipes/attributes-are-equal.html"},{default:c(()=>[s("Attributes are equal")]),_:1})]),n("li",null,[a(e,{to:"/recipes/element-attributes.html"},{default:c(()=>[s("Element Attributes")]),_:1})])])])}const A=i(m,[["render",I],["__file","attributes-vs-properties.html.vue"]]);export{A as default};
