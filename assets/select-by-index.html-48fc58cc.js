import{_ as o,M as c,p as l,q as i,Q as t,R as s,t as n,N as e,a1 as p}from"./framework-e03faf0e.js";const u={},k=s("h1",{id:"select-value-by-partial-text-via-its-index",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#select-value-by-partial-text-via-its-index","aria-hidden":"true"},"#"),n(" Select value by partial text via its index")],-1),r=p(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>270<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Green apples<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>381<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Fresh oranges<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>718<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Juicy melons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),d={href:"https://on.cypress.io/contains",target:"_blank",rel:"noopener noreferrer"},v=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;select option&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;melon&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// confirm the selected value</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.value&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;718&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g={href:"https://youtu.be/tUWZTHfUkNA",target:"_blank",rel:"noopener noreferrer"};function m(h,b){const a=c("ExternalLinkIcon");return l(),i("div",null,[k,t(" fiddle Select value by partial text via its index "),r,s("p",null,[n('How would we select the option with the text "melon"? We need to find it using a partial text match using the '),s("a",d,[n("cy.contains"),e(a)]),n(", then grab the index of the element among its siblings, and then use the index to select the option.")]),v,s("p",null,[n("Watch the video "),s("a",g,[n("Select An Option By Partial Text Match"),e(a)]),n(".")]),t(" fiddle-end ")])}const f=o(u,[["render",m],["__file","select-by-index.html.vue"]]);export{f as default};
