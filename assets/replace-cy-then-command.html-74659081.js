import{_ as p,M as c,p as o,q as l,R as s,t as n,N as e,Q as t,a1 as i}from"./framework-e03faf0e.js";const u={},r=s("h1",{id:"replace-cy-then-command",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#replace-cy-then-command","aria-hidden":"true"},"#"),n(" Replace cy.then command")],-1),d={href:"https://on.cypress.io/then",target:"_blank",rel:"noopener noreferrer"},k=s("em",null,"almost",-1),m=s("code",null,"cy.later",-1),v=i(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// if anyone tries to use cy.then in the spec code or in a plugin</span>
<span class="token comment">// we will get an error</span>
Cypress<span class="token punctuation">.</span>Commands<span class="token punctuation">.</span><span class="token function">overwrite</span><span class="token punctuation">(</span><span class="token string">&#39;then&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
  <span class="token parameter">then<span class="token punctuation">,</span>
  subject<span class="token punctuation">,</span>
  cb<span class="token punctuation">,</span>
  allowUse<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>allowUse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Using cy.then command is disallowed&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">then</span><span class="token punctuation">(</span>subject<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

Cypress<span class="token punctuation">.</span>Commands<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
  <span class="token string">&#39;later&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">prevSubject</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">subject<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// cy.later behaves just like cy.then</span>
    <span class="token comment">// which we implement by calling the original cy.then command</span>
    <span class="token keyword">return</span> cy<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token string">&#39;then&#39;</span><span class="token punctuation">,</span> subject<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

cy<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;be.a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">later</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> x<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;HelloHello&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),h={href:"https://glebbahmutov.com/blog/replace-and-remove-cy-then-command/",target:"_blank",rel:"noopener noreferrer"};function b(y,_){const a=c("ExternalLinkIcon");return o(),l("div",null,[r,s("p",null,[n("Many people have a problem with the "),s("a",d,[n("cy.then"),e(a)]),n(" command. It behaves "),k,n(" like a promise, causing confusion. Let's replace it with a custom "),m,n(" command.")]),t(" fiddle Rename and replace the cy.then command "),v,t(" fiddle-end "),s("p",null,[n("Read the blog post "),s("a",h,[n("Replace The cy.then Command"),e(a)]),n(".")])])}const f=p(u,[["render",b],["__file","replace-cy-then-command.html.vue"]]);export{f as default};
