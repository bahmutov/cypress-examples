import{_ as o,M as c,p as i,q as l,R as n,t as s,N as t,Q as p,a1 as e}from"./framework-e03faf0e.js";const u={},r=n("h1",{id:"window-property",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#window-property","aria-hidden":"true"},"#"),s(" Window property")],-1),d=n("h2",{id:"checking-if-property-was-set",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#checking-if-property-was-set","aria-hidden":"true"},"#"),s(" Checking if property was set")],-1),k={href:"https://github.com/cypress-io/cypress/issues/5419",target:"_blank",rel:"noopener noreferrer"},m=e(`<p>With custom timeout</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">// application code, start with window.Hash = null</span>
  window<span class="token punctuation">.</span>myproperty <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">Hash</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// and set the value after 10 seconds</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span>myproperty<span class="token punctuation">.</span>Hash <span class="token operator">=</span> <span class="token string">&#39;1234&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),v=n("code",null,"Hash",-1),h=n("code",null,"1234",-1),y={href:"https://on.cypress.io/should#Function",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"should(cb)",-1),f=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// increase the command timeout</span>
cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">11000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">win</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>win<span class="token punctuation">.</span>myproperty<span class="token punctuation">.</span>Hash<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token string">&#39;1234&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// alternative: use cy.its</span>
cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">11000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">its</span><span class="token punctuation">(</span><span class="token string">&#39;myproperty.Hash&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// just confirm the property is set, without checking the value</span>
cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">its</span><span class="token punctuation">(</span><span class="token string">&#39;myproperty.Hash&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// confirm &quot;window.myproperty&quot; is set</span>
cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.property&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;myproperty&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;deep.equal&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">Hash</span><span class="token operator">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function g(w,_){const a=c("ExternalLinkIcon");return i(),l("div",null,[r,d,n("p",null,[s("For question "),n("a",k,[s("#5419"),t(a)])]),p(" fiddle Property is set after delay "),m,n("p",null,[s("Now our code should retry, until "),v,s(" is really "),h,s(". See "),n("a",y,[b,t(a)]),s(".")]),f,p(" fiddle-end ")])}const H=o(u,[["render",g],["__file","window-property.html.vue"]]);export{H as default};
