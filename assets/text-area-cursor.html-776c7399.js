import{_ as p,M as o,p as c,q as l,Q as a,R as n,t as s,N as u,a1 as t}from"./framework-e03faf0e.js";const i={},r=n("h1",{id:"text-area-cursor",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#text-area-cursor","aria-hidden":"true"},"#"),s(" Text area cursor")],-1),k=n("h2",{id:"text-area-cursor-position",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#text-area-cursor-position","aria-hidden":"true"},"#"),s(" Text area cursor position")],-1),d=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>essay<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;textarea#essay&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;My name is{enter}Joe&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.prop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;selectionStart&#39;</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),m={href:"https://stackoverflow.com/questions/7745867/how-do-you-get-the-cursor-position-in-a-textarea",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Finds the start of the line
 */</span>
<span class="token keyword">function</span> <span class="token function">prevLine</span><span class="token punctuation">(</span><span class="token parameter">me</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> lineArr <span class="token operator">=</span> me<span class="token punctuation">.</span>value
    <span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> me<span class="token punctuation">.</span>selectionStart<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> numChars <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lineArr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    numChars <span class="token operator">+=</span> lineArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> numChars
<span class="token punctuation">}</span>
<span class="token comment">// confirm the row and column of the current cursor in the given text area</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;textarea#essay&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">$textArea</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ta <span class="token operator">=</span> $textArea<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> row <span class="token operator">=</span> ta<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> ta<span class="token punctuation">.</span>selectionStart<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>length
  <span class="token function">expect</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token string">&#39;row&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> col <span class="token operator">=</span> ta<span class="token punctuation">.</span>selectionStart <span class="token operator">-</span> <span class="token function">prevLine</span><span class="token punctuation">(</span>ta<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>col<span class="token punctuation">,</span> <span class="token string">&#39;column&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function b(h,f){const e=o("ExternalLinkIcon");return c(),l("div",null,[r,k,a(" fiddle Text area cursor position "),d,n("p",null,[s("We can compute the row and column of the cursor following this "),n("a",m,[s("StackOverflow example"),u(e)]),s(".")]),v,a(" fiddle-end ")])}const x=p(i,[["render",b],["__file","text-area-cursor.html.vue"]]);export{x as default};
