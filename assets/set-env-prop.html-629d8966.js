import{_ as p,M as o,p as c,q as i,R as s,t as n,N as t,Q as e,a1 as l}from"./framework-e03faf0e.js";const u={},r=s("h1",{id:"setting-a-property-in-a-complex-environment-object",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#setting-a-property-in-a-complex-environment-object","aria-hidden":"true"},"#"),n(" Setting a property in a complex environment object")],-1),k={href:"https://github.com/cypress-io/cypress/discussions/14374",target:"_blank",rel:"noopener noreferrer"},d={href:"https://on.cypress.io/environment-variables",target:"_blank",rel:"noopener noreferrer"},v={href:"https://on.cypress.io/env",target:"_blank",rel:"noopener noreferrer"},m=l(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">person</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&#39;Joe&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&#39;Smith&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">82</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// we can get individual property</span>
<span class="token function">expect</span><span class="token punctuation">(</span>
  Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;person&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span>last<span class="token punctuation">,</span>
  <span class="token string">&#39;last name from person&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token string">&#39;Smith&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// same by getting the entire env object</span>
<span class="token function">expect</span><span class="token punctuation">(</span>
  Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>person<span class="token punctuation">.</span>name<span class="token punctuation">.</span>last<span class="token punctuation">,</span>
  <span class="token string">&#39;last name from env&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token string">&#39;Smith&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// you can use bundled Lodash _.get method</span>
<span class="token function">expect</span><span class="token punctuation">(</span>
  Cypress<span class="token punctuation">.</span>_<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;person.name.last&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token string">&#39;last name using _.get&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token string">&#39;Smith&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// what if we want to change a single nested property</span>
<span class="token comment">// deep inside the environment object without</span>
<span class="token comment">// changing anything else?</span>
<span class="token comment">// Solution: get the entire object,</span>
<span class="token comment">// then set an individual property and then set it back</span>
<span class="token keyword">const</span> env <span class="token operator">=</span> Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
env<span class="token punctuation">.</span>person<span class="token punctuation">.</span>name<span class="token punctuation">.</span>last <span class="token operator">=</span> <span class="token string">&#39;Smitz&#39;</span>
Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>person<span class="token punctuation">.</span>name<span class="token punctuation">.</span>last<span class="token punctuation">,</span> <span class="token string">&#39;changed name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>
  <span class="token string">&#39;Smitz&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token comment">// NOTE: you do not need to even use \`Cypress.env\` to set the updated</span>
<span class="token comment">// object reference after changing one of its properties.</span>
env<span class="token punctuation">.</span>person<span class="token punctuation">.</span>name<span class="token punctuation">.</span>last <span class="token operator">=</span> <span class="token string">&#39;Bravo&#39;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>
  Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>person<span class="token punctuation">.</span>name<span class="token punctuation">.</span>last<span class="token punctuation">,</span>
  <span class="token string">&#39;changed by reference&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token string">&#39;Bravo&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// Advanced: note that the object references are the same</span>
<span class="token comment">// if we ask for property &quot;person&quot; from the environment object</span>
<span class="token comment">// it is the same reference as the one we got already under &quot;env.person.name&quot;</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;person&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name
<span class="token function">expect</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=s("p",null,"Thus the simplest answer is: get the environment object and set the properties directly.",-1);function h(f,g){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,s("p",null,[n("Based on the question "),s("a",k,[n("#14374"),t(a)])]),s("p",null,[n("Imagine we have a complex object set as the "),s("a",d,[n("Cypress environment variables"),t(a)]),n(" when using "),s("a",v,[n("Cypress.env"),t(a)]),n(" method.")]),e(" fiddle Set one env property "),m,e(" fiddle-end "),b])}const _=p(u,[["render",h],["__file","set-env-prop.html.vue"]]);export{_ as default};
