import{_ as i,M as e,p as l,q as u,Q as p,R as n,t as s,N as a,V as r,a1 as o}from"./framework-e03faf0e.js";const d={},k=n("h1",{id:"user-invalid-css-form-validation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#user-invalid-css-form-validation","aria-hidden":"true"},"#"),s(" User-invalid CSS Form Validation")],-1),v={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:user-invalid",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,":user-invalid",-1),g=n("p",null,[n("strong",null,"Note:"),s(" this test requires Chrome >= v119")],-1),b={href:"https://youtu.be/BWkNZ3qQ7C8",target:"_blank",rel:"noopener noreferrer"},h=o(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Email *: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">input:user-invalid</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">input:user-invalid + span::before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;✖&#39;</span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Confirm the browser supports <code>:user-invalid</code> CSS selector, but first ensure the browser has full support for it.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>family <span class="token operator">!==</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;‼️ this test requires a Chromium browser&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> version <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>majorVersion<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>version <span class="token operator">&lt;</span> <span class="token number">119</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;‼️ this test requires Chrome &gt;= v119&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),f=n("code",null,"type=email",-1),_=n("code",null,"cy.realType",-1),y={href:"https://github.com/dmtrKovalenko/cypress-real-events",target:"_blank",rel:"noopener noreferrer"},q=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// we start without any error styles</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;form input#email + span&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;not.be.visible&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;**Entering invalid string input**&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;form input#email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// using cypress-real-events to trigger the browser validation</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;form input#email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">realType</span><span class="token punctuation">(</span><span class="token string">&#39;not an email&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// remove the focus from the input field</span>
<span class="token comment">// so the browser knows the user stopped</span>
<span class="token comment">// interacting with the input field</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;form input#email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The form should trigger <code>:user-invalid</code> state, since we stopped interacting with the input field.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;**check the :user-input CSS is applied**&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;form input#email + span&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;be.visible&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;form input#email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span>
  <span class="token string">&#39;have.css&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;border&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;2px solid rgb(255, 0, 0)&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token comment">// check the span that shows the cross mark</span>
<span class="token comment">// needs a little bit of extra code to get the &quot;::before content&quot;</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;form input#email + span&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">applyToFirstRight</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>getComputedStyle<span class="token punctuation">,</span> <span class="token string">&#39;::before&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;getPropertyValue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;✖&quot;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),w=n("h2",{id:"see-also",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),s(" See also")],-1);function C(x,S){const t=e("ExternalLinkIcon"),c=e("RouterLink");return l(),u("div",null,[k,p(" fiddle User-invalid pseudo selector for form validation "),n("p",null,[s("Testing the "),n("a",v,[m,a(t)]),s(" CSS selector.")]),g,n("p",null,[s("📺 Watch this recipe explained in the video "),n("a",b,[s("Test CSS Property :user-invalid Using Cypress E2E Test"),a(t)]),s(".")]),h,n("p",null,[s("Enter partial email into the field with "),f,s(" attribute using "),_,s(" native events from the "),n("a",y,[s("cypress-real-events"),a(t)]),s(" plugin.")]),q,p(" fiddle-end "),w,n("ul",null,[n("li",null,[a(c,{to:"/recipes/pseudo-selectors.html"},{default:r(()=>[s("Pseudo CSS selectors")]),_:1})])])])}const V=i(d,[["render",C],["__file","user-invalid-form-validation.html.vue"]]);export{V as default};
