import{_ as p,M as c,p as i,q as l,R as n,t as s,N as e,Q as a,a1 as o}from"./framework-e03faf0e.js";const u={},d=n("h1",{id:"window",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#window","aria-hidden":"true"},"#"),s(" Window")],-1),r={href:"https://on.cypress.io/api",target:"_blank",rel:"noopener noreferrer"},k={id:"cy-window",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#cy-window","aria-hidden":"true"},"#",-1),h={href:"https://on.cypress.io/window",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,[s("To get the global window object, use the "),n("code",null,"cy.window()"),s(" command.")],-1),g=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.property&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;top&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),b=n("p",null,[s("You can use the yielded "),n("code",null,"window"),s(" object to call the methods on that window directly. For example, if the application code adds a method "),n("code",null,"getAppName"),s(" to the "),n("code",null,"window"),s(" object, you can execute the method from the spec. You can even pass arguments and confirm the result.")],-1),f=o(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">// the application adds a method &quot;getAppName&quot; at some point</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function-variable function">getAppName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">version</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">App_v</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// if the method exists on the &quot;window&quot; object, we can immediately call it</span>
cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">w</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>w<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;2 + 2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// if the method is added at some point in the future</span>
<span class="token comment">// we can use built-in retry-ability using cy.invoke command</span>
cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// This command waits until the method exists</span>
  <span class="token comment">// the calls it with the given arguments</span>
  <span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;getAppName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// confirm the result</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;App_v1.0&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_={href:"https://youtu.be/Z5i60En_33A",target:"_blank",rel:"noopener noreferrer"},w={id:"cy-document",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#cy-document","aria-hidden":"true"},"#",-1),x={href:"https://on.cypress.io/document",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,[s("To get the document object, use the "),n("code",null,"cy.document()"),s(" command.")],-1),N=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">document</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.property&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;charset&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token string">&#39;eq&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;UTF-8&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A={id:"cy-title",tabindex:"-1"},q=n("a",{class:"header-anchor",href:"#cy-title","aria-hidden":"true"},"#",-1),T={href:"https://on.cypress.io/title",target:"_blank",rel:"noopener noreferrer"},C=n("p",null,[s("To get the title, use the "),n("code",null,"cy.title()"),s(" command.")],-1),E=o(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;Window APIs&#39;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;include&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Window APIs&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2);function V(W,I){const t=c("ExternalLinkIcon");return i(),l("div",null,[d,n("p",null,[s("Examples of referencing window and other properties on window in Cypress, for a full reference of commands, go to "),n("a",r,[s("docs.cypress.io"),e(t)])]),n("h2",k,[m,s(),n("a",h,[s("cy.window()"),e(t)])]),v,a(" fiddle window / access a built-in property "),g,a(" fiddle-end "),b,a(" fiddle window / call a method "),f,a(" fiddle-end "),n("p",null,[s("Watch the explanation in the video "),n("a",_,[s("Call Window Method From Cypress Spec"),e(t)]),s(".")]),n("h2",w,[y,s(),n("a",x,[s("cy.document()"),e(t)])]),j,a(" fiddle document "),N,a(" fiddle-end "),n("h2",A,[q,s(),n("a",T,[s("cy.title()"),e(t)])]),C,a(" fiddle title "),E,a(" fiddle-end ")])}const F=p(u,[["render",V],["__file","window.html.vue"]]);export{F as default};
