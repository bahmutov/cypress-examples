import{_ as c,M as i,p as l,q as p,R as a,t as n,N as t,Q as s,a1 as o}from"./framework-e03faf0e.js";const d={},r=a("h1",{id:"decimals",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#decimals","aria-hidden":"true"},"#"),n(" Decimals")],-1),u={href:"https://youtu.be/-IEFhheipzs",target:"_blank",rel:"noopener noreferrer"},m=a("h2",{id:"two-decimals",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#two-decimals","aria-hidden":"true"},"#"),n(" Two decimals")],-1),h=a("p",null,"Let's confirm the element has text that ends with two decimal numbers.",-1),k=o(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>amount<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1,465.30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;#amount&#39;</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.\\d\\d$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),g=a("h2",{id:"optional-zero-last-decimal",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#optional-zero-last-decimal","aria-hidden":"true"},"#"),n(" Optional zero last decimal")],-1),v=a("p",null,"Sometimes the last digit is optional, if it is zero.",-1),_=o(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>amount<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1,465.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;#amount&#39;</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.\\d\\d?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),x=a("strong",null,"Tip:",-1),f={href:"https://github.com/bahmutov/cypress-map",target:"_blank",rel:"noopener noreferrer"};function b(q,w){const e=i("ExternalLinkIcon");return l(),p("div",null,[r,a("p",null,[n("Watch the explanation for this recipe in the video "),a("a",u,[n("Check The Element Contains A Number That Ends With Two Decimals"),t(e)]),n(".")]),m,h,s(" fiddle Two decimals "),k,s(" fiddle-end "),g,v,s(" fiddle Optional last zero "),_,s(" fiddle-end "),a("p",null,[x,n(" In Cypress v12 you can get the text of the element and invoke the regular expression match method, see "),a("a",f,[n("cypress-map"),t(e)])])])}const N=c(d,[["render",b],["__file","decimals.html.vue"]]);export{N as default};
