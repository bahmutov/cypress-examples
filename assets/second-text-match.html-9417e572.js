import{_ as p,M as c,p as o,q as l,R as s,t as n,N as t,Q as e,a1 as i}from"./framework-e03faf0e.js";const u={},r=s("h1",{id:"second-text-match",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#second-text-match","aria-hidden":"true"},"#"),n(" Second Text Match")],-1),d=s("em",null,"second",-1),k={href:"https://on.cypress.io/contains",target:"_blank",rel:"noopener noreferrer"},h=s("em",null,"first",-1),m={href:"https://on.cypress.io/get",target:"_blank",rel:"noopener noreferrer"},g={href:"https://api.jquery.com/contains-selector/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://on.cypress.io/eq",target:"_blank",rel:"noopener noreferrer"},_=i(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Apples<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Grapes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Apple pies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Sour grapes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// cy.contains returns the first match for &quot;Apple&quot;</span>
cy<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;Apple&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.text&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Apples&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// use jQuery :contains selector to find all elements</span>
<span class="token comment">// by the partial text match</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;li:contains(Apple)&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.length&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token comment">// grab the second match</span>
  <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.text&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Apple pies&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),b={href:"https://youtu.be/CRTRIaTX3hc",target:"_blank",rel:"noopener noreferrer"};function f(x,y){const a=c("ExternalLinkIcon");return o(),l("div",null,[r,s("p",null,[n("Imagine we have multiple elements on the page with the same text, and we want to grab the "),d,n(" element with the given text. The command "),s("a",k,[n("cy.contains"),t(a)]),n(" is great, but it gives us the "),h,n(" element. We need the second. We can use the "),s("a",m,[n("cy.get"),t(a)]),n(" command with jQuery "),s("a",g,[n(":contains"),t(a)]),n(" selector that matches the elements by the partial text. Then we can use the "),s("a",v,[n("cy.eq"),t(a)]),n(" command to pick the element by index.")]),e(" fiddle The second text match "),_,s("p",null,[n("Find a video explaining this test here "),s("a",b,[n("Find Multiple Elements By The Partial Text Match"),t(a)])]),e(" fiddle-end ")])}const q=p(u,[["render",f],["__file","second-text-match.html.vue"]]);export{q as default};
