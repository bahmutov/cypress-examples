import{_ as o,M as p,p as i,q as c,R as n,t as a,N as e,Q as t,a1 as l}from"./framework-e03faf0e.js";const u={},r=n("h1",{id:"validate-an-email",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#validate-an-email","aria-hidden":"true"},"#"),a(" Validate An Email")],-1),d={href:"https://youtu.be/iRJJqijuFYI",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,[a("Using the browser's "),n("code",null,"input"),a(" DOM element we can validate a string to check if it is a valid email expression or not.")],-1),m=l(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// create an input type email DOM element</span>
<span class="token comment">// We can use jQuery to simplify the syntax</span>
<span class="token keyword">const</span> input <span class="token operator">=</span> Cypress<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;input type=&quot;email&quot;&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;gleb@acme.co&#39;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">checkValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;first email is valid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>be<span class="token punctuation">.</span><span class="token boolean">true</span>
input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;gleb&#39;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">checkValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;second string is not an email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to
  <span class="token punctuation">.</span>be<span class="token punctuation">.</span><span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),v=n("strong",null,"Note:",-1),_={href:"https://emailregex.com/",target:"_blank",rel:"noopener noreferrer"};function h(f,b){const s=p("ExternalLinkIcon");return i(),c("div",null,[r,n("p",null,[a("ðŸ“º Watch this recipe explained in "),n("a",d,[a("Validate Email Format Using Built-in Browser Input Element"),e(s)])]),k,t(" fiddle validate an email "),m,t(" fiddle-end "),n("p",null,[v,a(" using a regular expression to validate an email is "),n("a",_,[a("tricky"),e(s)])])])}const x=o(u,[["render",h],["__file","validate-email.html.vue"]]);export{x as default};
