import{_ as c,M as o,p as i,q as l,R as s,t as n,N as t,Q as p,a1 as e}from"./framework-e03faf0e.js";const u={},r=s("h1",{id:"custom-events",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#custom-events","aria-hidden":"true"},"#"),n(" Custom Events")],-1),d={href:"https://youtu.be/qCqzS3LtSeI",target:"_blank",rel:"noopener noreferrer"},k=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>signal<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;signal&#39;</span><span class="token punctuation">)</span>
  el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;go&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;#00ff00&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;on warn&#39;</span><span class="token punctuation">)</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;#ffff00&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;stop&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;#ff0000&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#signal</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Our custom signal element starts with gray color.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#signal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span>
  <span class="token string">&#39;have.css&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;background-color&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;rgb(128, 128, 128)&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),v={href:"https://on.cypress.io/get",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"$el[0]",-1),g={href:"https://developer.mozilla.org/en-US/docs/Web/Events/Creating_and_triggering_events",target:"_blank",rel:"noopener noreferrer"},b=s("code",null,"dispatchEvent",-1),h=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#signal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">$el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Cypress yields a jQuery object</span>
  <span class="token comment">// so we take the first DOM element</span>
  <span class="token comment">// and call its &quot;dispatchEvent&quot; method</span>
  $el<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomEvent</span><span class="token punctuation">(</span><span class="token string">&#39;go&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s confirm the custom event worked and changed the color.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#signal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span>
  <span class="token string">&#39;have.css&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;background-color&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;rgb(0, 255, 0)&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),f=s("code",null,"$el[0].dispatchEvent",-1),_={href:"https://on.cypress.io/trigger",target:"_blank",rel:"noopener noreferrer"},y=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#signal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#signal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span>
  <span class="token string">&#39;have.css&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;background-color&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;rgb(255, 255, 0)&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),j={href:"https://github.com/bahmutov/cypress-map",target:"_blank",rel:"noopener noreferrer"},x=s("code",null,"cy.at(0)",-1),E=s("code",null,"dispatchEvent",-1),w=s("code",null,"cy.invokeOnce",-1),C=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// cy.at and cy.invokeOnce commands come from</span>
<span class="token comment">// cypress-map plugin</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#signal&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">invokeOnce</span><span class="token punctuation">(</span><span class="token string">&#39;dispatchEvent&#39;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CustomEvent</span><span class="token punctuation">(</span><span class="token string">&#39;stop&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// confirm the element turns red</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#signal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span>
  <span class="token string">&#39;have.css&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;background-color&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;rgb(255, 0, 0)&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function L(q,M){const a=o("ExternalLinkIcon");return i(),l("div",null,[r,s("p",null,[n("See this example explained in 📺 "),s("a",d,[n("Dispatch Custom HTML Events From Cypress Tests"),t(a)]),n(".")]),p(" fiddle Dispatch custom events "),k,s("p",null,[n("We can dispatch a custom event to the element by finding the element using "),s("a",v,[n("cy.get"),t(a)]),n(" command. This yields a jQuery object. We can get to the actual DOM element using "),m,n(" syntax. Then we dispatch a "),s("a",g,[n("custom event object"),t(a)]),n(" using the "),b,n(" HTML method.")]),h,s("p",null,[n("Instead of "),f,n(" we can use Cypress command "),s("a",_,[n(".trigger"),t(a)]),n(":")]),y,s("p",null,[n("If we are using "),s("a",j,[n("cypress-map"),t(a)]),n(" plugin, then we can get the first DOM element from the jQuery object using "),x,n(" command and then trigger the HTML "),E,n(" but without retry-ability using "),w]),C,p(" fiddle-end ")])}const T=c(u,[["render",L],["__file","custom-events.html.vue"]]);export{T as default};
