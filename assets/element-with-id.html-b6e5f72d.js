import{_ as e,M as p,p as o,q as c,R as s,t as n,N as i,Q as a,a1 as l}from"./framework-e03faf0e.js";const u={},r=s("h1",{id:"element-with-id",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#element-with-id","aria-hidden":"true"},"#"),n(" Element With ID")],-1),d={href:"https://youtu.be/mdNuuKl2dpw",target:"_blank",rel:"noopener noreferrer"},k=l(`<p>If a DOM element has an <code>id=&lt;name&gt;</code> property, the element is automatically linked to the <code>window</code> object as its <code>name</code> property. Cypress tests run in the browser, thus we can confirm it by comparing the queried element reference to the <code>window[name]</code> reference.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>person<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Joe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#person&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">$el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// using cy.window and cy.its commands</span>
  <span class="token comment">// get the &quot;window.person&quot; element</span>
  <span class="token comment">// and confirm it is the same as the element</span>
  <span class="token comment">// inside the jQuery object yielded by the cy.get command</span>
  cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">its</span><span class="token punctuation">(</span><span class="token string">&#39;person&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;equal&#39;</span><span class="token punctuation">,</span> $el<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token comment">// print both elements to the DevTools console</span>
  cy<span class="token punctuation">.</span><span class="token function">window</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">w</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;window.person&#39;</span><span class="token punctuation">,</span> w<span class="token punctuation">.</span>person<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;cy.get person&#39;</span><span class="token punctuation">,</span> $el<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function m(h,v){const t=p("ExternalLinkIcon");return o(),c("div",null,[r,s("p",null,[n("ðŸ“º Watch this recipe in the video "),s("a",d,[n("DOM Element With ID Becomes Property Of The Window Object"),i(t)]),n(".")]),a(" fiddle Element with ID is a window property "),k,a(" fiddle-end ")])}const b=e(u,[["render",m],["__file","element-with-id.html.vue"]]);export{b as default};
